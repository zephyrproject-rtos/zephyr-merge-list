<!DOCTYPE html>
<html>

<head>
<style>
body {
	font-family: Roboto, Arial, sans-serif;
	font-size: 14px
}
@media (prefers-color-scheme: dark) {
	body {
		background-color: #0d1111;
		color: #e0e0e0;
	}
}

a {
	text-decoration: none;
	color: #000000;
}
@media (prefers-color-scheme: dark) {
	a {
		color: #eeeeee;
	}
}

a:hover {
	text-decoration: underline;
	color: #000000;
}
@media (prefers-color-scheme: dark) {
	a:hover {
		color: #eeeeee;
	}
}

span.approved {
	color: #269926
}
@media (prefers-color-scheme: dark) {
	span.approved {
		color: #40ff40
	}
}

span.blocked {
	color: #992626
}
@media (prefers-color-scheme: dark) {
	span.blocked {
		color: #ff4040;
	}
}

span.unknown {
	color: #999926
}
@media (prefers-color-scheme: dark) {
	span.unknown {
		color: #ffff40;
	}
}

span.none {
	color: #999999
}

a.approved {
	color: #269926
}

a.blocked {
	color: #992626
}

.prs {
	border-collapse: collapse;
	width: 100%;
}

.prs td, .prs th {
	border: 1px solid #ddd;
	padding: 4px;
}

.prs tr:nth-child(even){
	background-color: #f2f2f2;
}
@media (prefers-color-scheme: dark) {
	.prs tr:nth-child(even){
		background-color: #303030;
	}
}

.prs tr:hover {
	background-color: #eeeeee;
}
@media (prefers-color-scheme: dark) {
	.prs tr:hover {
		background-color: #555555;
	}
}

.prs th {
	padding-top: 4px;
	padding-bottom: 4px;
	text-align: left;
	background-color: #333f67;
	color: white;
}

.prs tr.draft {
	font-style: italic;
	opacity: 0.5;
}

.prs tr.mergeable {
	background-color: #e8f5e8;
	font-weight: 500;
}
@media (prefers-color-scheme: dark) {
	.prs tr.mergeable {
		background-color: #1a3d1a;
	}
}

.motd {
	margin-left: auto;
	margin-right: auto;
	border: 3px solid red;
	margin-top: 10px;
	margin-bottom: 10px;
}

.tag {
	display: inline-block;
	padding: 0px 6px;
	border-radius: 4px;
	font-family: sans-serif;
	font-size: 12px;
	font-weight: bold;
	text-align: center;
	white-space: nowrap;
}

.tag-trivial {
	background-color: #f9d0b1;
	color: black;
}

.tag-hotfix {
	background-color: #b60205;
	color: white;
}

.tag-oldci {
	background-color: #fef2c0;
	color: black;
}

.tag-dnm {
	background-color: #b60205;
	color: white;
}

.mergeable-button {
	padding: 8px 16px;
	background-color: #269926;
	color: white;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-size: 14px;
	transition: background-color 0.2s;
}

.mergeable-button:hover {
	background-color: #1e7a1e;
}

@media (prefers-color-scheme: dark) {
	.mergeable-button {
		background-color: #40ff40;
		color: #000000;
	}

	.mergeable-button:hover {
		background-color: #33cc33;
	}
}
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js"></script>

<script type="text/javascript">
	addEventListener("load", (event) => {
		const url = "https://raw.githubusercontent.com/wiki/zephyrproject-rtos/zephyr/Merge-List-MOTD.md";
		fetch(url)
			.then((response) => {
				if (!response.ok) {
					throw new Error("HTTP error: " + response.status);
				}
				return response.text();
			})
			.then((text) => {
				console.log("motd: " + text);

				if (text == "empty") {
					return;
				}

				const motd_table = document.getElementById("motd-table");
				const motd_text = document.getElementById("motd-text");
				motd_text.textContent = text;
				motd_table.hidden = false;
			});
	});
</script>

<script type="text/javascript">
	addEventListener("load", (event) => {
		var checkbox = document.getElementById("autoRefreshCheckbox");
		var value = localStorage.getItem("autoRefresh");
		if (value == "true") {
			checkbox.checked = true;
		}

		convertTimestampToRelative();
	});

	function convertTimestampToRelative() {
		const timestampElement = document.getElementById("update-timestamp");
		const momentTime = moment(timestampElement.textContent);
		const headerElement = document.getElementById("last-update-header");

		timestampElement.textContent = momentTime.fromNow();
		timestampElement.title = momentTime.toString();
		headerElement.style.visibility = "visible";
	}

	function refreshSave() {
		var checkbox = document.getElementById("autoRefreshCheckbox");
		localStorage.setItem("autoRefresh", checkbox.checked);
	}

	setInterval(function () {
		if (document.getElementById("autoRefreshCheckbox").checked) {
			location.reload();
		}
	}, 60000);

	function openMergeablePRs() {
		const prTable = document.getElementById("author");
		const mergeableRows = prTable.querySelectorAll("tr.mergeable");

		let openedCount = 0;
		mergeableRows.forEach(row => {
			// Get the PR URL from the first cell
			const prLink = row.cells[0].querySelector('a');
			if (prLink) {
				window.open(prLink.href, '_blank');
				openedCount++;
			}
		});

		if (openedCount === 0) {
			alert("No mergeable PRs found (PRs need to target 'main' and have three green checkmarks)");
		} else {
			alert(`Opened ${openedCount} mergeable PR(s) in new tabs`);
		}
	}
</script>

</head>

<body>

<h1>Merge list</h1>

<h3 id="last-update-header" style="visibility: hidden;">
  Last update: <span id="update-timestamp">UPDATE_TIMESTAMP</span>
</h3>
<h3>CI: CI_STATUS</h3>

<table class="motd" id="motd-table" hidden>
  <tr><td id="motd-text"></td></tr>
</table>

<table class="prs" id="author">
  <tr>
    <th>#</th>
    <th>Title</th>
    <th>Tags</th>
    <th>Author</th>
    <th>Assignee</th>
    <th>Approvers</th>
    <th>Base</th>
    <th>Milestone</th>
    <th title="Mergeable">&#8624;</th>
    <th title="Approved">&check;</th>
    <th title="Review time">&#9202;</th>
  </tr>
